/* Информационные функции, вызываемые как действия ментального автоматизма по их ID функции.

Для каждой инфо-функции создается ее дежурная структура и общая переменная currentInfoStructId == ID инфо-функции
*/

package psychic

/* Общая переменная currentInfoStructId == ID инфо-функции),
которые могут использоваться при запуске consciousness()
 */
var currentInfoStructId=0

///////////////////////////////////
/* Функция вызова пронумерованной функции
 */
func runMenyalFunctionID(id int){
	switch id {

	}
}
//////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////
/* далее идут ПРОНУМЕРОВАННЫЕ ИНФОРМАЦИОННЫЕ ФУНКЦИИ,
для которых в mental_automatizm_INFO_structs.go определяются ИНФОРМАЦИОННЫЕ ГЛОБАЛЬНЫЕ СТРУКТУРЫ - для
передачи в них полученной информации.

Прототипы:
type infoStruct4 struct {
	par int
}
var info4 infoStruct4
func infoFunc4(){
	res:=0

	info4.par = res // передача инфы в структуру
	currentInfoStructId=4 // определение актуальной инфо-структуры
}
 */
//////////////////////////////////////////////////////////




/* Подобрать MentalActionsImages
случайно или по заготовке редактора с Пульта
*/
func infoFunc0(){
	iID:=0// ID MentalActionsImages

	activateBaseID:=0
	activateEmotion:=0
	activateInfoFunc:=0
	activateMotorID:=0

	// TODO подобрать

	// создать
	iID,_=CreateNewlastMentalActionsImagesID(0,activateBaseID,activateEmotion,	activateInfoFunc,activateMotorID)

	info0.mImgID = iID // передача инфы в структуру
	currentInfoStructId=0 // определение актуальной инфо-структуры
}

//////////////////////////////////////////////////////////

/*
*************** Группировка зеркальных автоматизмов *********************
Были зафиксированы две цепочки диалога по 2 шага каждая (1 шаг - 1 пара вопрос + ответ):
а) Привет – привет, как дела – нормально
б) Приветствую – привет, Ты как – отлично
Из них сформировались 2 зеркальных автоматизма: привет - как дела, привет - ты как. Их можно сгруппировать и вывести в отдельном
массиве варианты ответов на один пускатель: привет - как дела, ты как.
При поиске ответа нужно искать в этом массиве и выбирать варианты например по счетчику успешности. Это будет намного быстрее,
чем перебирать весь массив автоматизмов.
Для такой группировки нужно при создании нового зеркального автоматизма дописывать
в этот массив новый вариант в нужной строке: находить в массиве пусковое слово и добавлять к нему вариант ответа.
По сути это групповой запрос, только выделенный в динамическую таблицу. Так БД-шники часто делают, если приходится ворочать объемные
данные под миллионы записей. Вместо тяжелых тормозных запросов строятся буферные таблицы и забиваются через хранимки при совершении
операций с данными.
*/